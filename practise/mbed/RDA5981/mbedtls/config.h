/**
 * \file config.h
 *
 * \brief Configuration options (set of defines)
 *
 *  This set of compile-time options may be used to enable
 *  or disable features selectively, and reduce the global
 *  memory footprint.
 *
 *  Copyright (C) 2006-2015, ARM Limited, All Rights Reserved
 *  SPDX-License-Identifier: Apache-2.0
 *
 *  Licensed under the Apache License, Version 2.0 (the "License"); you may
 *  not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *  http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 *  WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 *
 *  This file is part of mbed TLS (https://tls.mbed.org)
 */

#ifndef MBEDTLS_CONFIG_H
#define MBEDTLS_CONFIG_H

#include "autoconf.h"
#if defined(_MSC_VER) && !defined(_CRT_SECURE_NO_DEPRECATE)
#define _CRT_SECURE_NO_DEPRECATE 1
#endif


#define MBEDTLS_HAVE_ASM



//#define MBEDTLS_HAVE_SSE2


//#define MBEDTLS_HAVE_TIME


//#define MBEDTLS_HAVE_TIME_DATE


//#define MBEDTLS_PLATFORM_MEMORY


//#define MBEDTLS_PLATFORM_NO_STD_FUNCTIONS


//#define MBEDTLS_PLATFORM_EXIT_ALT
//#define MBEDTLS_PLATFORM_TIME_ALT
//#define MBEDTLS_PLATFORM_FPRINTF_ALT
//#define MBEDTLS_PLATFORM_PRINTF_ALT
//#define MBEDTLS_PLATFORM_SNPRINTF_ALT
//#define MBEDTLS_PLATFORM_NV_SEED_ALT


//#define MBEDTLS_DEPRECATED_WARNING


//#define MBEDTLS_DEPRECATED_REMOVED

/* \} name SECTION: System support */


//#define MBEDTLS_TIMING_ALT


//#define MBEDTLS_AES_ALT
//#define MBEDTLS_ARC4_ALT
//#define MBEDTLS_BLOWFISH_ALT
//#define MBEDTLS_CAMELLIA_ALT
//#define MBEDTLS_DES_ALT
//#define MBEDTLS_XTEA_ALT
//#define MBEDTLS_MD2_ALT
//#define MBEDTLS_MD4_ALT
//#define MBEDTLS_MD5_ALT
//#define MBEDTLS_RIPEMD160_ALT
//#define MBEDTLS_SHA1_ALT
//#define MBEDTLS_SHA256_ALT
//#define MBEDTLS_SHA512_ALT


//#define MBEDTLS_MD2_PROCESS_ALT
//#define MBEDTLS_MD4_PROCESS_ALT
//#define MBEDTLS_MD5_PROCESS_ALT
//#define MBEDTLS_RIPEMD160_PROCESS_ALT
//#define MBEDTLS_SHA1_PROCESS_ALT
//#define MBEDTLS_SHA256_PROCESS_ALT
//#define MBEDTLS_SHA512_PROCESS_ALT
//#define MBEDTLS_DES_SETKEY_ALT
//#define MBEDTLS_DES_CRYPT_ECB_ALT
//#define MBEDTLS_DES3_CRYPT_ECB_ALT
//#define MBEDTLS_AES_SETKEY_ENC_ALT
//#define MBEDTLS_AES_SETKEY_DEC_ALT
//#define MBEDTLS_AES_ENCRYPT_ALT
//#define MBEDTLS_AES_DECRYPT_ALT
#if defined(TARGET_UNO_91H)
//#define MBEDTLS_AES_ENCRYPT_CBC_ALT
//#define MBEDTLS_AES_SETKEY_ENC_ALT
//#define MBEDTLS_AES_SETKEY_DEC_ALT
//#define MBEDTLS_AES_ENCRYPT_ALT
//#define MBEDTLS_AES_DECRYPT_ALT
//#define MBEDTLS_RSA_MONTMUL_ALT
//#define MBEDTLS_DRBG_ALT
#endif /* TARGET_UNO_91H */


//#define MBEDTLS_TEST_NULL_ENTROPY

//#define MBEDTLS_ENTROPY_HARDWARE_ALT


//#define MBEDTLS_AES_ROM_TABLES


//#define MBEDTLS_CAMELLIA_SMALL_MEMORY


#define MBEDTLS_CIPHER_MODE_CBC

/**
 * \def MBEDTLS_CIPHER_MODE_CFB
 *
 * Enable Cipher Feedback mode (CFB) for symmetric ciphers.
 */
//#define MBEDTLS_CIPHER_MODE_CFB

/**
 * \def MBEDTLS_CIPHER_MODE_CTR
 *
 * Enable Counter Block Cipher mode (CTR) for symmetric ciphers.
 */
//#define MBEDTLS_CIPHER_MODE_CTR


//#define MBEDTLS_CIPHER_NULL_CIPHER


//#define MBEDTLS_CIPHER_PADDING_PKCS7
//#define MBEDTLS_CIPHER_PADDING_ONE_AND_ZEROS
//#define MBEDTLS_CIPHER_PADDING_ZEROS_AND_LEN
//#define MBEDTLS_CIPHER_PADDING_ZEROS


//#define MBEDTLS_ENABLE_WEAK_CIPHERSUITES

//#define MBEDTLS_REMOVE_ARC4_CIPHERSUITES


//#define MBEDTLS_ECP_DP_SECP192R1_ENABLED
//#define MBEDTLS_ECP_DP_SECP224R1_ENABLED
//#define MBEDTLS_ECP_DP_SECP256R1_ENABLED
//#define MBEDTLS_ECP_DP_SECP384R1_ENABLED
//#define MBEDTLS_ECP_DP_SECP521R1_ENABLED
//#define MBEDTLS_ECP_DP_SECP192K1_ENABLED
//#define MBEDTLS_ECP_DP_SECP224K1_ENABLED
//#define MBEDTLS_ECP_DP_SECP256K1_ENABLED
//#define MBEDTLS_ECP_DP_BP256R1_ENABLED
//#define MBEDTLS_ECP_DP_BP384R1_ENABLED
//#define MBEDTLS_ECP_DP_BP512R1_ENABLED
//#define MBEDTLS_ECP_DP_CURVE25519_ENABLED


//#define MBEDTLS_ECP_NIST_OPTIM


//#define MBEDTLS_ECDSA_DETERMINISTIC


//#define MBEDTLS_KEY_EXCHANGE_PSK_ENABLED


//#define MBEDTLS_KEY_EXCHANGE_DHE_PSK_ENABLED


//#define MBEDTLS_KEY_EXCHANGE_ECDHE_PSK_ENABLED


//#define MBEDTLS_KEY_EXCHANGE_RSA_PSK_ENABLED


#define MBEDTLS_KEY_EXCHANGE_RSA_ENABLED


//#define MBEDTLS_KEY_EXCHANGE_DHE_RSA_ENABLED


//#define MBEDTLS_KEY_EXCHANGE_ECDHE_RSA_ENABLED

//#define MBEDTLS_KEY_EXCHANGE_ECDHE_ECDSA_ENABLED


//#define MBEDTLS_KEY_EXCHANGE_ECDH_ECDSA_ENABLED


//#define MBEDTLS_KEY_EXCHANGE_ECDH_RSA_ENABLED


//#define MBEDTLS_KEY_EXCHANGE_ECJPAKE_ENABLED

//#define MBEDTLS_PK_PARSE_EC_EXTENDED


//#define MBEDTLS_ERROR_STRERROR_DUMMY


//#define MBEDTLS_GENPRIME


//#define MBEDTLS_FS_IO

//#define MBEDTLS_NO_DEFAULT_ENTROPY_SOURCES


#define MBEDTLS_NO_PLATFORM_ENTROPY


//#define MBEDTLS_ENTROPY_FORCE_SHA256


//#define MBEDTLS_ENTROPY_NV_SEED



//#define MBEDTLS_MEMORY_DEBUG


//#define MBEDTLS_MEMORY_BACKTRACE


#define MBEDTLS_PK_RSA_ALT_SUPPORT


#define MBEDTLS_PKCS1_V15


//#define MBEDTLS_PKCS1_V21


//#define MBEDTLS_RSA_NO_CRT


//#define MBEDTLS_SELF_TEST


//#define MBEDTLS_SHA256_SMALLER


//#define MBEDTLS_SSL_AEAD_RANDOM_IV


//#define MBEDTLS_SSL_ALL_ALERT_MESSAGES


//#define MBEDTLS_SSL_DEBUG_ALL


//#define MBEDTLS_SSL_ENCRYPT_THEN_MAC

//#define MBEDTLS_SSL_EXTENDED_MASTER_SECRET


//#define MBEDTLS_SSL_FALLBACK_SCSV


//#define MBEDTLS_SSL_HW_RECORD_ACCEL


//#define MBEDTLS_SSL_CBC_RECORD_SPLITTING


//#define MBEDTLS_SSL_RENEGOTIATION


//#define MBEDTLS_SSL_SRV_SUPPORT_SSLV2_CLIENT_HELLO


//#define MBEDTLS_SSL_SRV_RESPECT_CLIENT_PREFERENCE


#define MBEDTLS_SSL_MAX_FRAGMENT_LENGTH


//#define MBEDTLS_SSL_PROTO_SSL3


//#define MBEDTLS_SSL_PROTO_TLS1


//#define MBEDTLS_SSL_PROTO_TLS1_1


#define MBEDTLS_SSL_PROTO_TLS1_2

#if 0
#define MBEDTLS_SSL_PROTO_DTLS


#define MBEDTLS_SSL_ALPN

#define MBEDTLS_SSL_DTLS_ANTI_REPLAY


#define MBEDTLS_SSL_DTLS_HELLO_VERIFY


#define MBEDTLS_SSL_DTLS_CLIENT_PORT_REUSE


#define MBEDTLS_SSL_DTLS_BADMAC_LIMIT
#endif

//#define MBEDTLS_SSL_SESSION_TICKETS


//#define MBEDTLS_SSL_EXPORT_KEYS

//#define MBEDTLS_SSL_SERVER_NAME_INDICATION


//#define MBEDTLS_SSL_TRUNCATED_HMAC

//#define MBEDTLS_THREADING_ALT

//#define MBEDTLS_THREADING_PTHREAD

//#define MBEDTLS_VERSION_FEATURES

//#define MBEDTLS_X509_ALLOW_EXTENSIONS_NON_V3


//#define MBEDTLS_X509_ALLOW_UNSUPPORTED_CRITICAL_EXTENSION


//#define MBEDTLS_X509_CHECK_KEY_USAGE

//#define MBEDTLS_X509_CHECK_EXTENDED_KEY_USAGE


//#define MBEDTLS_ZLIB_SUPPORT
/* \} name SECTION: mbed TLS feature support */


//#define MBEDTLS_AESNI_C


#define MBEDTLS_AES_C


//#define MBEDTLS_ARC4_C

#define MBEDTLS_ASN1_PARSE_C

#define MBEDTLS_ASN1_WRITE_C

#define MBEDTLS_BASE64_C

#define MBEDTLS_BIGNUM_C


//#define MBEDTLS_BLOWFISH_C

//#define MBEDTLS_CAMELLIA_C


//#define MBEDTLS_CCM_C


#define MBEDTLS_CERTS_C

#define MBEDTLS_CIPHER_C


#define MBEDTLS_CTR_DRBG_C


//#define MBEDTLS_DEBUG_C


//#define MBEDTLS_DES_C


//#define MBEDTLS_DHM_C


//#define MBEDTLS_ECDH_C


//#define MBEDTLS_ECDSA_C


//#define MBEDTLS_ECJPAKE_C


//#define MBEDTLS_ECP_C


#define MBEDTLS_ENTROPY_C


//#define MBEDTLS_ERROR_C


//#define MBEDTLS_GCM_C


//#define MBEDTLS_HAVEGE_C


//#define MBEDTLS_HMAC_DRBG_C


#define MBEDTLS_MD_C


//#define MBEDTLS_MD2_C


//#define MBEDTLS_MD4_C


//#define MBEDTLS_MD5_C


//#define MBEDTLS_MEMORY_BUFFER_ALLOC_C


//#define MBEDTLS_NET_C


#define MBEDTLS_OID_C


//#define MBEDTLS_PADLOCK_C


#define MBEDTLS_PEM_PARSE_C


#define MBEDTLS_PEM_WRITE_C


#define MBEDTLS_PK_C


#define MBEDTLS_PK_PARSE_C


#define MBEDTLS_PK_WRITE_C


//#define MBEDTLS_PKCS5_C


//#define MBEDTLS_PKCS11_C

//#define MBEDTLS_PKCS12_C


#define MBEDTLS_PLATFORM_C


//#define MBEDTLS_RIPEMD160_C


#define MBEDTLS_RSA_C

//#define MBEDTLS_SHA1_C


#ifdef CONFIG_HILINK_CLOUD
#undef MBEDTLS_SHA256_C
#else
#define MBEDTLS_SHA256_C
#endif

//#define MBEDTLS_SHA512_C


//#define MBEDTLS_SSL_CACHE_C


//#define MBEDTLS_SSL_COOKIE_C


//#define MBEDTLS_SSL_TICKET_C


#define MBEDTLS_SSL_CLI_C


//#define MBEDTLS_SSL_SRV_C


#define MBEDTLS_SSL_TLS_C


//#define MBEDTLS_THREADING_C


#define MBEDTLS_VERSION_C


#define MBEDTLS_X509_USE_C


#define MBEDTLS_X509_CRT_PARSE_C

#define MBEDTLS_SSL_MAX_CONTENT_LEN			(8*1024)


//#define MBEDTLS_X509_CRL_PARSE_C



#if defined(YOTTA_CFG_MBEDTLS_USER_CONFIG_FILE)
#include YOTTA_CFG_MBEDTLS_USER_CONFIG_FILE
#elif defined(MBEDTLS_USER_CONFIG_FILE)
#include MBEDTLS_USER_CONFIG_FILE
#endif

#include "check_config.h"

#endif /* MBEDTLS_CONFIG_H */
